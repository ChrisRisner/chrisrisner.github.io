_id: 4e6bd097-a6f1-4b59-8b6e-2c8d9dbaaff9
_parent: /31-Days-of-Android--Day-23-Writing-and-Reading-Files
message: "<p>Hi, I'm developing a simple android sketching app as a part of a project. I want to know if it is possible to be able to save the app data in my computer. For more detail:</p><p>I am interested in the coordinates of the points where I touch the screen on my android device and want to use these for further work in my computer. Therefore, I need a way that I can access these  from my computer. I have seen that I can print out the coordinates in Android Studio at runtime, with the device connected through USB. Is there any way that I can save these in my computer in the text file? I created a list and pushed all the coordinates into that, but am not sure where that is being saved and how to write that in a file in my own computer.</p><p>This is the relevant code. The commented part is what I tried doing but didn't work:</p><p>    [...]<br>    import <a href=\"http://java.io\" rel=\"nofollow noopener\" title=\"java.io\">java.io</a>.*;<br>    import java.io.BufferedWriter;<br>    import java.util.ArrayList;</p><p>    public class DrawingView extends View {<br>        private static final String TAG = \"MyActivity\";<br>        //    Writer writer;<br>        //    FileOutputStream file;<br>        ArrayList coords;</p><p>        //drawing path<br>        private Path drawPath;<br>        //drawing and canvas paint<br>        private Paint drawPaint, canvasPaint;<br>        //initial color<br>        private int paintColor = 0xFF660000;<br>        //canvas<br>        private Canvas drawCanvas;<br>        //canvas bitmap<br>        private Bitmap canvasBitmap;<br>        private float brushSize, lastBrushSize;<br>        private boolean erase=false;</p><p>        public DrawingView(Context context, AttributeSet attrs){<br>            super(context, attrs);<br>            setupDrawing();<br>            coords = new ArrayList();<br>        }</p><p>        private void setupDrawing(){<br>            //get drawing area setup for interaction<br>            drawPath = new Path();<br>            drawPaint = new Paint();<br>            drawPaint.setColor(paintColor);<br>            drawPaint.setAntiAlias(true);<br>            drawPaint.setStrokeWidth(20);<br>            drawPaint.setStyle(Paint.Style.STROKE);<br>            drawPaint.setStrokeJoin(Paint.Join.ROUND);<br>            drawPaint.setStrokeCap(Paint.Cap.SQUARE);<br>            canvasPaint = new Paint(Paint.DITHER_FLAG);<br>            brushSize = getResources().getInteger(R.integer.medium_size);<br>            lastBrushSize = brushSize;<br>            drawPaint.setStrokeWidth(brushSize);<br>        }</p><p>        [...]</p><p>        @Override<br>        public boolean onTouchEvent(MotionEvent event) {<br>            //detect user touch<br>            float touchX = event.getX();<br>            float touchY = event.getY();</p><p>            String x = Float.toString(touchX);<br>            String y = Float.toString(touchY);<br>            String c = \"(\" + x + \", \" + y + \")\";<br>            Log.d(TAG, c);<br>            coords.add(c);</p><p>            switch (event.getAction()) {<br>                case MotionEvent.ACTION_DOWN:<br>                    drawPath.moveTo(touchX, touchY);<br>                    break;<br>                case MotionEvent.ACTION_MOVE:<br>                    drawPath.lineTo(touchX, touchY);<br>                    break;<br>                case MotionEvent.ACTION_UP:<br>                    drawCanvas.drawPath(drawPath, drawPaint);<br>                    drawPath.reset();<br>                    break;<br>                default:<br>                    return false;<br>            }<br>            //try {<br>                //writer = new BufferedWriter(new OutputStreamWriter(file, \"utf-8\"));<br>                //writer.write(\"Something\");<br>            //} catch(IOException e){<br>                ////report<br>            //}</p><p>            invalidate();<br>            return true;<br>        }</p><p>        [...]</p><p>    }</p>"
name: Esteleth
email: 5A32597F12095D8A803AC023DE90C57F
url: ''
replying_to: ''
hidden: ''
date: '2015-02-28T11:35:26Z'