PhoneGap


1.  Open Terminal
2.  Navigate to ~/downloads/phonegap-2.7.0/lib/ios/bin
3.  run:
	./create ~/code/phonegap/tedemo org.chris.tedemo phonegapdemo
4.  Navigate in finder
5.  Open project
6.  Run project
7.  Open portal
8.  Create mobile service
9.  Download HTML / JS quick start
10.  Run project locally
11.  Chmod 777 project, refresh website
12.  Open index.css, copy contents from styles.css
13.  Open index.js, copy var client ... into receivedEvent method, comment out other code
14.  Open inde.html, copy over <div id='wrapper' ...
15.  Download jquery, mobile service JS, please in js folder, NON Minifed Versions!
16.  Add references into index.html


Xamarin
1.  Open Xamarin Studio
2.  New Solution
3.  iOS app, universal, empty project
4.  Run empty project (Swith to simulator if build issues, make sure 6.1)
5.  Select project, go to Project Menu, Edit Components, add Zumo
6.  Right click on References folder, edit references
7.  Add System.Runtime.Serialization, MonoTouch.Dialog-1 assems
8.  Open AppDelegate.cs, add using Microsoft.WindowsAzure.MobileServices;
9.  Add inside class:
	public static MobileServiceClient MobileService = new MobileServiceClient(
			"https://yoururl.azure-mobile.net/", 
			"yourkey"
			);
10.  Add new file, empty class, TodoItem.cs
11.  Add using System.runtime.serialization.
12.  Add:
	public class TodoItem
	{
	    public int Id { get; set; }
	    [DataMember (Name = "text")]
	    public string Text { get; set; }
	    [DataMember (Name = "complete")]
	    public bool Complete { get; set; }
	}
13.  Add DialogViewController - TodoViewController
14.  Add: 
	using Microsoft.WindowsAzure.MobileServices;
	using System.Threading.Tasks;
	using System.Runtime.Serialization;

15.  Add this code:
	IMobileServiceTable<TodoItem> table;
		TaskScheduler scheduler;

		public TodoViewController() : base(UITableViewStyle.Grouped, null)
		{
			table = AppDelegate.MobileService.GetTable<TodoItem>();
			scheduler = TaskScheduler.FromCurrentSynchronizationContext();
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			Refresh ();
		}

		private void Refresh()
		{
			table.Where(ti => !ti.Complete).ToListAsync()
				.ContinueWith(task => PopulateItems(task.Result), scheduler );
		}

		private void PopulateItems(List<TodoItem> items)
		{
			var inputElement = new EntryElement("Todo", "Enter your todo item", string.Empty);
			var todoItemElements = items.Select(todoItem => new StringElement(todoItem.Text)).Cast<Element>().ToList();

			Root = new RootElement("Todos") {
				new Section() {
					inputElement,
					new StyledStringElement("Add", () => {
						var item = new TodoItem { Text = inputElement.Value };
						table.InsertAsync(item).ContinueWith(_ => Refresh());
					}) { Alignment = UITextAlignment.Center } 
				},
				new Section("Todo Items") { Elements = todoItemElements }
			};
		}

16.  Open appdelegate, add to finish launching:
	window.RootViewController = new UINavigationController(new TodoViewController());

17.  Set up twitter auth account
18.  Copy over key and secret
19.  change viewDidLoad to this:

	public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			if (AppDelegate.MobileService.CurrentUser == null) {
				Login ();
			}
			else 
				Refresh ();
		}

20.  Add login method:
	 void Login()
		{
			AppDelegate.MobileService.LoginAsync(this, MobileServiceAuthenticationProvider.Twitter).ContinueWith(t => 
			                                                                                                     {
				BeginInvokeOnMainThread (() => 
				                         {
					var user = t.Result;
					var alert = new UIAlertView("Welcome!",  
					                            "You are now logged in and your user id is " 
					                            + user.UserId, null, "OK");                                                       
					alert.Show ();
					Refresh ();
				});
			});
		}